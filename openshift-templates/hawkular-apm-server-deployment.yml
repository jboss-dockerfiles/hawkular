---
apiVersion: "v1"
metadata:
  name: hawkular-apm
items:
- apiVersion: v1
  kind: Secret
  metadata:
    name: hawkular-apm-admin-account
  data:
    hawkular-apm.username: YWRtaW4K
    hawkular-apm.password: cGFzc3dvcmQK
  type: Opaque
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: hawkular-apm
  spec:
    tls:
      insecureEdgeTerminationPolicy: Allow
      termination: edge
    to:
      kind: Service
      name: hawkular-apm
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: hawkular-apm
  spec:
    replicas: 1
    selector:
      name: hawkular-apm
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        annotations:
          "service.alpha.openshift.io/dependencies": "[{\"name\": \"hawkular-apm-es\", \"kind\": \"Service\"}]"
        labels:
          name: hawkular-apm
      spec:
        containers:
        - capabilities: {}
          env:
          - name: HAWKULAR_APM_ELASTICSEARCH_HOSTS
            value: hawkular-apm-es:9300
          - name: HAWKULAR_APM_ELASTICSEARCH_CLUSTER
            value: hawkular-apm-es-cluster
          image: jboss/hawkular-apm-server
          volumeMounts:
              - name: client-secrets
                mountPath: /client-secrets
                readOnly: true
          imagePullPolicy: IfNotPresent
          name: hawkular-apm
          terminationMessagePath: /dev/termination-log
          readinessProbe:
            timeoutSeconds: 10
            initialDelaySeconds: 40
            httpGet:
              path: "/hawkular/apm/status"
              port: 8080
          livenessProbe:
            timeoutSeconds: 10
            initialDelaySeconds: 40
            httpGet:
              path: "/hawkular/apm/status"
              port: 8080
          resources:
            requests:
              memory: 1024Mi
              cpu: 2000m
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
          - name: client-secrets
            secret:
              secretName: hawkular-apm-admin-account
        serviceAccountName: hawkular-apm
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: hawkular-apm-es
  spec:
    replicas: 1
    selector:
      name: hawkular-apm-es
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: hawkular-apm-es
      spec:
        containers:
        - capabilities: {}
          env:
          - name: CLUSTER_NAME
            value: hawkular-apm-es-cluster
          image: jpkroehling/elasticsearch
          imagePullPolicy: IfNotPresent
          name: hawkular-apm-es
          terminationMessagePath: /dev/termination-log
          readinessProbe:
            timeoutSeconds: 5
            initialDelaySeconds: 5
            httpGet:
              path: "/"
              port: 9200
          livenessProbe:
            timeoutSeconds: 5
            initialDelaySeconds: 5
            httpGet:
              path: "/"
              port: 9200
          resources:
            requests:
              memory: 256Mi
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        serviceAccountName: hawkular-apm-es
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: hawkular-apm
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.hawkular-apm: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"hawkular-apm"}}'
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: hawkular-apm-es
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.hawkular-apm-es: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"hawkular-apm-es"}}'
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: hawkular-apm
    creationTimestamp: null
    name: hawkular-apm
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name":"hawkular-apm-es","namespace":"","kind":"Service"}]'
  spec:
    ports:
    - name: web
      nodePort: 0
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      name: hawkular-apm
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: hawkular-apm-es
    creationTimestamp: null
    name: hawkular-apm-es
  spec:
    ports:
    - name: rest-api
      port: 9200
      protocol: TCP
      targetPort: 9200
    - name: native
      port: 9300
      protocol: TCP
      targetPort: 9300
    selector:
      name: hawkular-apm-es
    sessionAffinity: None
    type: ClusterIP
kind: "List"
